package istorage

import "fmt"

//NotFoundError is the error generated by an IStorage when the requested item is not found in the storage
type NotFoundError struct {
	//Model represents which model was in use in the operation
	Model string
	//Field represents which field was used to perform the search
	Field string
	//Key represents the value of the Field
	Key string
}


func (err NotFoundError) Error() string {
	return fmt.Sprintf("No %s was found where the %s equals %s", err.Model, err.Field, err.Key)
}

//NewNotFoundError creates a new NotFoundError
//model represents which model was in use in the operation
//field represents which field was used to perform the search
//key represents the value of the Field
func NewNotFoundError(model, field, key string) NotFoundError {
	return NotFoundError{
		Model: model,
		Field: field,
		Key:   key,
	}
}

//AlreadyExistsError is the error generated by an IStorage when the value intended to be set to an unique field of a element was already used by another element
type AlreadyExistsError struct {
	//Model represents which model was in use in the operation
	Model string
	//Field represents which field was the one where the conflict was found
	Field string
}

func (err *AlreadyExistsError) Error() string {
	return fmt.Sprintf("There is already a/an %s with the same %s", err.Model, err.Field)
}
